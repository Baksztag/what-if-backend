###########################
# Run from project root
###########################

- hosts: 127.0.0.1
  connection: local
  tasks:
      - name: Copy prod.exs to docker dir
        copy:
            src: "{{ playbook_dir }}/../config/prod.exs"
            dest: "{{ playbook_dir }}/../docker/"

- hosts: whatif
  become: yes
  pre_tasks:
      - name: include MongooseIM variables
        include_vars:
            file: "{{ playbook_dir }}/vars/deploy_config.yml"
            name: deploy_config
      - name:    Install prerequisites
        apt:     name={{item}} update_cache=yes
        with_items:
            - apt-transport-https
            - ca-certificates
            - curl
            - software-properties-common
      - name: Install Docker
        apt: name=docker-ce
      - apt:
            name: python-pip
            state: latest
      - name: Install docker-py
        pip:
            name: docker-py
  tasks:
      - name: Create directory for docker image files
        file: path=/docker state=directory
      - name: Copy docker folder
        copy:
            src: "{{ item }}"
            dest: /docker/
            owner: root
            mode: 600
        with_fileglob:
            - "{{ playbook_dir }}/../docker/*"
      - name: stop and remove containers
        docker_container:
            name: whatif_server
            state: absent
      - name: remove old image
        docker_image:
            name: server_image
            tag: "{{ deploy_config.image_tag }}"
            path: /docker
            state: absent
      - name: build image
        docker_image:
            name: server_image
            tag: "{{ deploy_config.image_tag }}"
            path: /docker
      - name: Re-create a server container
        docker_container:
            name: whatif_server
            image: "server_image:{{ deploy_config.image_tag }}"
            state: started
            recreate: yes
